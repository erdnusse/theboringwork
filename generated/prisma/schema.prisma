// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  image     String?
  role      Role     @default(USER)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  inquiries Inquiry[]

  @@map("users")
}

enum Role {
  USER
  AGENT
  ADMIN
}

// Inquiry model
model Inquiry {
  id        String        @id @default(cuid())
  name      String
  email     String
  phone     String?
  message   String
  status    InquiryStatus @default(NEW)
  createdAt DateTime      @default(now()) @map("created_at")
  updatedAt DateTime      @updatedAt @map("updated_at")

  // Relations
  userId String? @map("user_id")
  user   User?   @relation(fields: [userId], references: [id], onDelete: SetNull)

  @@map("inquiries")
}

enum InquiryStatus {
  NEW
  CONTACTED
  VIEWING_SCHEDULED
  CLOSED
}

// Email OAuth Configuration model
model EmailOAuthConfig {
  id           String   @id @default(cuid())
  email        String
  clientId     String   @map("client_id")
  clientSecret String   @map("client_secret")
  refreshToken String   @map("refresh_token")
  accessToken  String?  @map("access_token")
  tokenExpiry  BigInt?  @map("token_expiry")
  isActive     Boolean  @default(true) @map("is_active")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@unique([email, isActive])
  @@index([email])
  @@index([isActive])
  @@map("email_oauth_config")
}

// Email Log model
model EmailLog {
  id        String      @id @default(cuid())
  to        String
  subject   String
  content   String
  status    EmailStatus @default(PENDING)
  error     String?
  sentAt    DateTime?   @map("sent_at")
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")

  @@map("email_logs")
}

enum EmailStatus {
  PENDING
  SENT
  FAILED
}
